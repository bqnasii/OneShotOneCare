<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ö‡∏≤‡∏î‡πÅ‡∏ú‡∏•</title>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Roboto', Arial, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      color: #333;
    }

    header {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 20px;
      text-align: center;
      font-size: 28px;
      font-weight: 700;
      color: #2c3e50;
      box-shadow: 0 2px 20px rgba(0,0,0,0.1);
    }

    main {
      max-width: 1200px;
      margin: 20px auto;
      padding: 0 20px;
    }

    .camera-controls {
      display: flex;
      gap: 20px;
      justify-content: center;
      margin-bottom: 30px;
    }

    .camera-link, .btn, .btn-capture, .btn-stop {
      padding: 12px 24px;
      border: none;
      border-radius: 25px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      text-decoration: none;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    .camera-link {
      background: linear-gradient(45deg, #4CAF50, #45a049);
      color: white;
      display: inline-block;
    }

    .btn {
      background: linear-gradient(45deg, #2196F3, #1976D2);
      color: white;
    }

    .btn-capture {
      background: linear-gradient(45deg, #FF9800, #F57C00);
      color: white;
    }

    .btn-stop {
      background: linear-gradient(45deg, #f44336, #d32f2f);
      color: white;
    }

    .camera-link:hover, .btn:hover, .btn-capture:hover, .btn-stop:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(0,0,0,0.15);
    }

    .scan-section {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 30px;
      border-radius: 20px;
      margin-bottom: 30px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
    }

    .scan-section h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #2c3e50;
      font-size: 24px;
    }

    .btn-row {
      display: flex;
      gap: 15px;
      justify-content: center;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }

    #webcam-container {
      display: flex;
      justify-content: center;
      margin: 20px 0;
    }

    #webcam-container canvas {
      border-radius: 10px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.1);
      max-width: 100%;
    }

    #label-container {
      margin-top: 20px;
      padding: 20px;
      background: rgba(248, 249, 250, 0.8);
      border-radius: 10px;
      min-height: 60px;
    }

    .prediction {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      margin: 5px 0;
      background: white;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    .prediction.high-confidence {
      border-left: 4px solid #4CAF50;
      background: #f8fff8;
    }

    .confidence-bar {
      width: 100px;
      height: 6px;
      background: #e0e0e0;
      border-radius: 3px;
      overflow: hidden;
    }

    .confidence-fill {
      height: 100%;
      background: linear-gradient(90deg, #4CAF50, #45a049);
      transition: width 0.3s ease;
    }

    .disease-info {
      display: none;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 30px;
      border-radius: 20px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      margin-bottom: 30px;
    }

    .back-btn {
      background: linear-gradient(45deg, #6c757d, #5a6268);
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 20px;
      cursor: pointer;
      margin-bottom: 20px;
      font-size: 14px;
    }

    .disease-list {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 30px;
      border-radius: 20px;
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
    }

    .disease-list h3 {
      color: #2c3e50;
      margin-bottom: 20px;
      font-size: 20px;
    }

    .disease-list ul {
      list-style: none;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 10px;
    }

    .disease-list li a {
      display: block;
      padding: 12px 16px;
      background: rgba(248, 249, 250, 0.8);
      color: #495057;
      text-decoration: none;
      border-radius: 8px;
      transition: all 0.3s ease;
      border-left: 4px solid #dee2e6;
    }

    .disease-list li a:hover {
      background: rgba(13, 110, 253, 0.1);
      border-left-color: #0d6efd;
      color: #0d6efd;
      transform: translateX(5px);
    }

    footer {
      text-align: center;
      padding: 20px;
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(10px);
      color: white;
      margin-top: 40px;
    }

    .status-message {
      text-align: center;
      padding: 15px;
      margin: 10px 0;
      border-radius: 8px;
      font-weight: 500;
    }

    .status-success {
      background: #d1edff;
      color: #0c5460;
      border: 1px solid #bee5eb;
    }

    .status-error {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
    }

    .status-warning {
      background: #fff3cd;
      color: #856404;
      border: 1px solid #ffeaa7;
    }

    @media (max-width: 768px) {
      .camera-controls {
        flex-direction: column;
        align-items: center;
      }
      
      .btn-row {
        flex-direction: column;
        align-items: center;
      }
      
      .camera-link, .btn, .btn-capture, .btn-stop {
        width: 200px;
        text-align: center;
      }
    }
  </style>
</head>
<body>
  <header>
    ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ö‡∏≤‡∏î‡πÅ‡∏ú‡∏• V3.0
  </header>
  <main>
    <div class="camera-controls">
      <button class="camera-link" onclick="switchCamera('front')">üì∏ ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤</button>
      <button class="camera-link" onclick="switchCamera('back')">üì∏ ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á</button>
    </div>
    <div class="scan-section">
      <h2>üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ö‡∏≤‡∏î‡πÅ‡∏ú‡∏•</h2>
      
      <div class="btn-row">
        <button class="btn" onclick="initCamera()">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡πÅ‡∏Å‡∏ô</button>
        <button class="btn-capture" onclick="captureImage()" id="captureBtn" disabled>üì∏ ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û</button>
        <button class="btn-stop" onclick="stopWebcam()" id="stopBtn" disabled>‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á</button>
      </div>
      
      <div id="status-container"></div>
      <div id="webcam-container"></div>
      <div id="label-container"></div>
    </div>

    <!-- ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå -->
    <div id="disease-info" class="disease-info">
      <button class="back-btn" onclick="backToScan()">üîô ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</button>
      <div id="disease-content"></div>
    </div>

    <!-- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏£‡∏Ñ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î -->
    <div class="disease-list">
      <h3>‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ</h3>
      <ul>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏Ñ‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢')">‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏Ñ‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ï‡∏∏‡πà‡∏°‡∏ô‡∏π‡∏ô‡πÅ‡∏î‡∏á‡∏ö‡∏ß‡∏°')">‡∏ï‡∏∏‡πà‡∏°‡∏ô‡∏π‡∏ô‡πÅ‡∏î‡∏á‡∏ö‡∏ß‡∏°‡∏à‡∏≤‡∏Å‡πÅ‡∏°‡∏•‡∏á</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ï‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏û‡∏≠‡∏á')">‡∏ï‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏û‡∏≠‡∏á</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ú‡∏¥‡∏ß‡πÑ‡∏´‡∏°‡πâ‡πÅ‡∏î‡∏î')">‡∏ú‡∏¥‡∏ß‡πÑ‡∏´‡∏°‡πâ‡πÅ‡∏î‡∏î</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ú‡∏∑‡πà‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠')">‡∏ú‡∏∑‡πà‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ú‡∏∑‡πà‡∏ô‡∏•‡∏°‡∏û‡∏¥‡∏©')">‡∏ú‡∏∑‡πà‡∏ô‡∏•‡∏°‡∏û‡∏¥‡∏©</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ')">‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°')">‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡πÅ‡∏î‡∏î')">‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡πÅ‡∏î‡∏î</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡∏û‡∏¢‡∏≤‡∏ò‡∏¥‡∏õ‡∏£‡∏™‡∏¥‡∏ï')">‡∏û‡∏¢‡∏≤‡∏ò‡∏¥‡∏õ‡∏£‡∏™‡∏¥‡∏ï</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤')">‡πÅ‡∏ú‡∏•‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡πÅ‡∏°‡∏•‡∏á‡∏Å‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏¢')">‡πÅ‡∏°‡∏•‡∏á‡∏Å‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏¢</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡πÇ‡∏£‡∏Ñ‡∏ô‡πâ‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ó‡πâ‡∏≤')">‡πÇ‡∏£‡∏Ñ‡∏ô‡πâ‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ó‡πâ‡∏≤</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏ô‡πà‡∏≤')">‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏ô‡πà‡∏≤</a></li>
        <li><a href="#" onclick="showDiseaseInfo('‡πÑ‡∏Ç‡πâ‡∏£‡∏≤‡∏Å‡∏™‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà')">‡πÇ‡∏£‡∏Ñ‡πÑ‡∏Ç‡πâ‡∏£‡∏≤‡∏Å‡∏™‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà</a></li>
      </ul>
    </div>
  </main>
  <footer>
    ¬© 2025 BQ | Terms | Privacy Policy
  </footer>

  <script>
    let webcam;
    let model;
    let maxPredictions;
    let isModelLoaded = false;
    let currentStream = null;
    let currentCamera = 'back'; // 'front' ‡∏´‡∏£‡∏∑‡∏≠ 'back'

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏£‡∏Ñ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤
    const diseaseInfo = {
      '‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏Ñ‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢': {
        name: '‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏Ñ‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢',
        symptoms: '‡∏ö‡∏≤‡∏î‡πÅ‡∏ú‡∏•‡πÅ‡∏î‡∏á ‡∏ö‡∏ß‡∏° ‡∏°‡∏µ‡∏´‡∏ô‡∏≠‡∏á ‡∏°‡∏µ‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÄ‡∏´‡∏°‡πá‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡πÑ‡∏Ç‡πâ',
        treatment: '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏ú‡∏• ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏ï‡πâ‡∏≤‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏Ñ‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏ó‡∏≤‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å ‡∏´‡∏≤‡∏Å‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡∏Ñ‡∏ß‡∏£‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå',
        prevention: '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡∏• ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ú‡πâ‡∏≤‡∏û‡∏±‡∏ô‡πÅ‡∏ú‡∏•‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡∏à‡∏≥'
      },
      '‡∏ï‡∏∏‡πà‡∏°‡∏ô‡∏π‡∏ô‡πÅ‡∏î‡∏á‡∏ö‡∏ß‡∏°': {
        name: '‡∏ï‡∏∏‡πà‡∏°‡∏ô‡∏π‡∏ô‡πÅ‡∏î‡∏á‡∏ö‡∏ß‡∏°‡∏à‡∏≤‡∏Å‡πÅ‡∏°‡∏•‡∏á',
        symptoms: '‡∏ï‡∏∏‡πà‡∏°‡πÅ‡∏î‡∏á ‡∏ö‡∏ß‡∏° ‡∏Ñ‡∏±‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πà‡∏≠‡∏¢',
        treatment: '‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡πÄ‡∏¢‡πá‡∏ô ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡∏Ñ‡∏±‡∏ô ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏≤',
        prevention: '‡πÉ‡∏ä‡πâ‡∏™‡πÄ‡∏õ‡∏£‡∏¢‡πå‡∏Å‡∏±‡∏ô‡πÅ‡∏°‡∏•‡∏á ‡∏™‡∏ß‡∏°‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏õ‡∏¥‡∏î‡∏Ñ‡∏•‡∏∏‡∏°'
      },
      '‡∏ï‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏û‡∏≠‡∏á': {
        name: '‡∏ï‡∏∏‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏û‡∏≠‡∏á',
        symptoms: '‡∏ï‡∏∏‡πà‡∏°‡πÉ‡∏™‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏Ç‡πâ‡∏≤‡∏á‡πÉ‡∏ô ‡∏≠‡∏≤‡∏à‡πÅ‡∏ï‡∏Å ‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡πÑ‡∏´‡∏•‡∏≠‡∏≠‡∏Å',
        treatment: '‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏Å‡∏∞‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏ó‡∏á ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡πÉ‡∏ä‡πâ‡∏ú‡πâ‡∏≤‡∏û‡∏±‡∏ô‡πÅ‡∏ú‡∏•‡∏õ‡∏¥‡∏î',
        prevention: '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏™‡∏¥‡πà‡∏á‡∏£‡πâ‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏µ‡∏¢‡∏î‡∏™‡∏µ'
      },
      '‡∏ú‡∏¥‡∏ß‡πÑ‡∏´‡∏°‡πâ‡πÅ‡∏î‡∏î': {
        name: '‡∏ú‡∏¥‡∏ß‡πÑ‡∏´‡∏°‡πâ‡πÅ‡∏î‡∏î',
        symptoms: '‡∏ú‡∏¥‡∏ß‡πÅ‡∏î‡∏á ‡∏£‡πâ‡∏≠‡∏ô ‡πÄ‡∏à‡πá‡∏ö ‡∏≠‡∏≤‡∏à‡∏•‡∏≠‡∏Å ‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏û‡∏≠‡∏á',
        treatment: '‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡πÄ‡∏¢‡πá‡∏ô ‡πÉ‡∏ä‡πâ‡πÇ‡∏•‡∏ä‡∏±‡πà‡∏ô‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏¥‡∏ß ‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏°‡∏≤‡∏Å ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î',
        prevention: '‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏µ‡∏°‡∏Å‡∏±‡∏ô‡πÅ‡∏î‡∏î ‡∏™‡∏ß‡∏°‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡∏Ñ‡∏•‡∏∏‡∏° ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡πÅ‡∏£‡∏á'
      },
      '‡∏ú‡∏∑‡πà‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠': {
        name: '‡∏ú‡∏∑‡πà‡∏ô‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡πÅ‡∏î‡∏á ‡∏Ñ‡∏±‡∏ô ‡∏°‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏Å',
        treatment: '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏¢‡πá‡∏ô ‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥‡∏ö‡πà‡∏≠‡∏¢ ‡πÉ‡∏ä‡πâ‡πÅ‡∏õ‡πâ‡∏á‡πÇ‡∏£‡∏¢‡∏ï‡∏±‡∏ß',
        prevention: '‡∏™‡∏ß‡∏°‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏≤‡∏¢‡∏≠‡∏≤‡∏Å‡∏≤‡∏®‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πâ‡∏≠‡∏ô‡∏à‡∏±‡∏î'
      },
      '‡∏ú‡∏∑‡πà‡∏ô‡∏•‡∏°‡∏û‡∏¥‡∏©': {
        name: '‡∏ú‡∏∑‡πà‡∏ô‡∏•‡∏°‡∏û‡∏¥‡∏©',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡∏ô‡∏π‡∏ô ‡πÅ‡∏î‡∏á ‡∏Ñ‡∏±‡∏ô ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÑ‡∏î‡πâ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà',
        treatment: '‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡πÅ‡∏≠‡∏ô‡∏ï‡∏¥‡∏Æ‡∏¥‡∏™‡∏ï‡∏≤‡∏°‡∏µ‡∏ô ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô ‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡πÄ‡∏¢‡πá‡∏ô',
        prevention: '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏û‡πâ ‡∏à‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏±‡∏à‡∏à‡∏±‡∏¢‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô'
      },
      '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ': {
        name: '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏î‡∏á ‡∏ö‡∏ß‡∏° ‡∏Ñ‡∏±‡∏ô ‡πÄ‡∏à‡πá‡∏ö ‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡πÄ‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ',
        treatment: '‡∏•‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡πâ‡∏≥‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ô‡∏±‡πâ‡∏ô ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡∏≠‡∏±‡∏Å‡πÄ‡∏™‡∏ö',
        prevention: '‡∏™‡∏ß‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏™‡∏≤‡∏£‡πÄ‡∏Ñ‡∏°‡∏µ'
      },
      '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°': {
        name: '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏î‡∏á ‡∏Ñ‡∏±‡∏ô ‡∏ö‡∏ß‡∏° ‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°‡∏ï‡πà‡∏≤‡∏á‡πÜ',
        treatment: '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡πÅ‡∏û‡πâ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î',
        prevention: '‡∏£‡∏∞‡∏ö‡∏∏‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏û‡πâ'
      },
      '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡πÅ‡∏î‡∏î': {
        name: '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏û‡πâ‡πÅ‡∏î‡∏î',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏î‡∏á ‡∏Ñ‡∏±‡∏ô ‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏ô‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î',
        treatment: '‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏µ‡∏°‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏ú‡∏¥‡∏ß ‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡πÄ‡∏¢‡πá‡∏ô',
        prevention: '‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏µ‡∏°‡∏Å‡∏±‡∏ô‡πÅ‡∏î‡∏î ‡∏™‡∏ß‡∏°‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡∏Ñ‡∏•‡∏∏‡∏°'
      },
      '‡∏û‡∏¢‡∏≤‡∏ò‡∏¥‡∏õ‡∏£‡∏™‡∏¥‡∏ï': {
        name: '‡∏û‡∏¢‡∏≤‡∏ò‡∏¥‡∏õ‡∏£‡∏™‡∏¥‡∏ï',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡πÅ‡∏î‡∏á ‡∏Ñ‡∏±‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏™‡πâ‡∏ô ‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏≠‡∏á‡∏û‡∏¢‡∏≤‡∏ò‡∏¥',
        treatment: '‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏Ü‡πà‡∏≤‡∏û‡∏¢‡∏≤‡∏ò‡∏¥ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏Å‡∏©‡∏≤',
        prevention: '‡∏™‡∏ß‡∏°‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡πÄ‡∏ó‡πâ‡∏≤‡πÄ‡∏õ‡∏•‡πà‡∏≤‡πÉ‡∏ô‡∏î‡∏¥‡∏ô‡πÄ‡∏õ‡∏µ‡∏¢‡∏Å'
      },
      '‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤': {
        name: '‡πÅ‡∏ú‡∏•‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡∏ß‡∏á‡∏Å‡∏•‡∏° ‡πÅ‡∏î‡∏á ‡∏Ç‡∏≠‡∏ö‡∏ä‡∏±‡∏î ‡∏Å‡∏•‡∏≤‡∏á‡∏à‡∏≤‡∏á ‡∏Ñ‡∏±‡∏ô',
        treatment: '‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏ï‡πâ‡∏≤‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤‡∏ó‡∏≤‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏´‡πâ‡∏á',
        prevention: '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô'
      },
      '‡πÅ‡∏°‡∏•‡∏á‡∏Å‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏¢': {
        name: '‡πÅ‡∏°‡∏•‡∏á‡∏Å‡∏±‡∏î‡∏ï‡πà‡∏≠‡∏¢',
        symptoms: '‡∏ï‡∏∏‡πà‡∏°‡πÅ‡∏î‡∏á ‡∏ö‡∏ß‡∏° ‡∏Ñ‡∏±‡∏ô ‡πÄ‡∏à‡πá‡∏ö ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏û‡∏¥‡∏©',
        treatment: '‡∏ñ‡∏≠‡∏î‡πÄ‡∏´‡∏•‡πá‡∏Å‡πÑ‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏∂‡πâ‡∏á ‡∏•‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏• ‡∏õ‡∏£‡∏∞‡∏Ñ‡∏ö‡πÄ‡∏¢‡πá‡∏ô ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡∏õ‡∏ß‡∏î',
        prevention: '‡πÉ‡∏ä‡πâ‡∏™‡πÄ‡∏õ‡∏£‡∏¢‡πå‡∏Å‡∏±‡∏ô‡πÅ‡∏°‡∏•‡∏á ‡∏™‡∏ß‡∏°‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏õ‡∏¥‡∏î‡∏Ñ‡∏•‡∏∏‡∏°'
      },
      '‡πÇ‡∏£‡∏Ñ‡∏ô‡πâ‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ó‡πâ‡∏≤': {
        name: '‡πÇ‡∏£‡∏Ñ‡∏ô‡πâ‡∏≥‡∏Å‡∏±‡∏î‡πÄ‡∏ó‡πâ‡∏≤',
        symptoms: '‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ô‡∏¥‡πâ‡∏ß‡πÄ‡∏ó‡πâ‡∏≤‡πÅ‡∏ï‡∏Å ‡∏•‡∏≠‡∏Å ‡∏Ñ‡∏±‡∏ô ‡πÄ‡∏õ‡∏µ‡∏¢‡∏Å‡∏ä‡∏∑‡πâ‡∏ô ‡∏°‡∏µ‡∏Å‡∏•‡∏¥‡πà‡∏ô',
        treatment: '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏´‡πâ‡∏á ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏ï‡πâ‡∏≤‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏£‡∏≤ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ñ‡∏∏‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ö‡πà‡∏≠‡∏¢',
        prevention: '‡∏™‡∏ß‡∏°‡∏ñ‡∏∏‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ã‡∏±‡∏ö‡πÄ‡∏´‡∏á‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏ó‡πâ‡∏≤‡πÉ‡∏´‡πâ‡πÅ‡∏´‡πâ‡∏á'
      },
      '‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏ô‡πà‡∏≤': {
        name: '‡πÇ‡∏£‡∏Ñ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏ô‡πà‡∏≤',
        symptoms: '‡πÅ‡∏ú‡∏•‡∏•‡∏∂‡∏Å ‡∏°‡∏µ‡∏´‡∏ô‡∏≠‡∏á ‡∏Å‡∏•‡∏¥‡πà‡∏ô‡πÄ‡∏´‡∏°‡πá‡∏ô ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡πÄ‡∏¢‡∏∑‡πà‡∏≠‡∏ï‡∏≤‡∏¢ ‡∏™‡∏µ‡∏î‡∏≥',
        treatment: '‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ï‡∏±‡∏î ‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏õ‡∏è‡∏¥‡∏ä‡∏µ‡∏ß‡∏ô‡∏∞',
        prevention: '‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÅ‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠'
      },
      '‡πÑ‡∏Ç‡πâ‡∏£‡∏≤‡∏Å‡∏™‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà': {
        name: '‡πÇ‡∏£‡∏Ñ‡πÑ‡∏Ç‡πâ‡∏£‡∏≤‡∏Å‡∏™‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà',
        symptoms: '‡∏ú‡∏∑‡πà‡∏ô‡∏ô‡πâ‡∏≥‡πÉ‡∏™ ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏´‡πâ‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏∞‡πÄ‡∏Å‡πá‡∏î ‡∏Ñ‡∏±‡∏ô ‡∏°‡∏±‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°',
        treatment: '‡πÉ‡∏ä‡πâ‡∏¢‡∏≤‡∏ï‡πâ‡∏≤‡∏ô‡πÑ‡∏ß‡∏£‡∏±‡∏™ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡∏≤',
        prevention: '‡∏â‡∏µ‡∏î‡∏ß‡∏±‡∏Ñ‡∏ã‡∏µ‡∏ô ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏†‡∏π‡∏°‡∏¥‡∏Ñ‡∏∏‡πâ‡∏°‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á'
      }
    };

    function showStatus(message, type = 'info') {
      const statusContainer = document.getElementById('status-container');
      statusContainer.innerHTML = `<div class="status-message status-${type}">${message}</div>`;
      setTimeout(() => {
        statusContainer.innerHTML = '';
      }, 5000);
    }

    async function initCamera() {
      try {
        showStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á...', 'warning');
        
        // ‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á
        const constraints = {
          video: {
            facingMode: currentCamera === 'front' ? 'user' : 'environment',
            width: { ideal: 640 },
            height: { ideal: 480 }
          }
        };

        const stream = await navigator.mediaDevices.getUserMedia(constraints);
        currentStream = stream;

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á video element
        const videoElement = document.createElement('video');
        videoElement.srcObject = stream;
        videoElement.autoplay = true;
        videoElement.playsInline = true;
        videoElement.style.width = '100%';
        videoElement.style.maxWidth = '640px';
        videoElement.style.borderRadius = '10px';
        videoElement.style.boxShadow = '0 4px 20px rgba(0,0,0,0.1)';

        const webcamContainer = document.getElementById('webcam-container');
        webcamContainer.innerHTML = '';
        webcamContainer.appendChild(videoElement);

        // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°
        document.getElementById('captureBtn').disabled = false;
        document.getElementById('stopBtn').disabled = false;

        showStatus('‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß! ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÑ‡∏î‡πâ', 'success');

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ AI model)
        if (!isModelLoaded) {
          initModel();
        }

      } catch (error) {
        console.error('Error accessing camera:', error);
        let errorMessage = '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ ';
        
        if (error.name === 'NotAllowedError') {
          errorMessage += '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå';
        } else if (error.name === 'NotFoundError') {
          errorMessage += '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå';
        } else {
          errorMessage += '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + error.message;
        }
        
        showStatus(errorMessage, 'error');
      }
    }

    async function initModel() {
      try {
        showStatus('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î AI Model...', 'warning');
        
        // ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î Teachable Machine model ‡∏´‡∏£‡∏∑‡∏≠ TensorFlow model
        // const modelURL = URL + "model.json";
        // const metadataURL = URL + "metadata.json";
        // model = await tmImage.load(modelURL, metadataURL);
        // maxPredictions = model.getTotalClasses();
        
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á AI Model
        await simulateModelLoading();
        isModelLoaded = true;
        
        showStatus('AI Model ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå!', 'success');
        startPrediction();
        
      } catch (error) {
        console.error('Error loading model:', error);
        showStatus('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î AI Model ‡πÑ‡∏î‡πâ', 'error');
      }
    }

    function simulateModelLoading() {
      return new Promise(resolve => {
        setTimeout(resolve, 2000); // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      });
    }

    async function startPrediction() {
      if (!isModelLoaded) return;

      const video = document.querySelector('#webcam-container video');
      if (!video) return;

      // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
      const predictions = await simulatePredict();
      displayPredictions(predictions);

      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ã‡πâ‡∏≥‡∏ó‡∏∏‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
      setTimeout(startPrediction, 2000);
    }

    async function simulatePredict() {
      // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ AI
      const diseases = Object.keys(diseaseInfo);
      const numPredictions = Math.min(3, diseases.length);
      const predictions = [];

      for (let i = 0; i < numPredictions; i++) {
        const disease = diseases[Math.floor(Math.random() * diseases.length)];
        const confidence = Math.random();
        predictions.push({
          className: disease,
          probability: confidence
        });
      }

      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à
      return predictions.sort((a, b) => b.probability - a.probability);
    }

    function displayPredictions(predictions) {
      const labelContainer = document.getElementById("label-container");
      labelContainer.innerHTML = "";

      if (predictions.length === 0) {
        labelContainer.innerHTML = '<p style="text-align: center; color: #666;">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå...</p>';
        return;
      }

      predictions.forEach((prediction, index) => {
        const confidence = Math.round(prediction.probability
